AC_INIT(mod_ldap_userdir.c)

AC_ARG_WITH(apxs,
            [AC_HELP_STRING([--with-apxs], [Path to Apache's apxs command])],
            test $withval = no || APXS=$withval)
AC_ARG_WITH(apxs2,
            [AC_HELP_STRING([--with-apxs2], [Path to Apache 2's apxs command])],
            test $withval = no || APXS=$withval)
AC_ARG_WITH(activate,
            [AC_HELP_STRING([--with-activate], [Activate mod_ldap_userdir.so in httpd.conf])],
            test $withval = yes && ACTIVATE=-a)
AC_ARG_WITH(sdk-directory, [AC_HELP_STRING([--with-sdk-headers], [Specify the path to the LDAP SDK header files])])
AC_ARG_WITH(sdk-directory, [AC_HELP_STRING([--with-sdk-libs], [Specify the path to the LDAP SDK libraries])])
AC_ARG_WITH(tls, [AC_HELP_STRING([--with-tls], [Build with TLS (LDAP over SSL) support])],
            test $withval = no || TLS=-DTLS=1)

AC_PROG_CC
dnl We need to reset CFLAGS after AC_PROG_CC sets it. apxs will provide
dnl its own CFLAGS and gets confused when we try to feed ours to it.
CFLAGS=''

if test "$with_apxs2" != ''; then
	APACHE2=-DAPACHE2=1
fi

if test -z "$APXS"  -o  "$APXS" = 'yes'; then
	if test -f /usr/local/apache/bin/apxs; then
		APXS=/usr/local/apache/bin/apxs
	elif test -f /usr/local/apache2/bin/apxs; then
		APXS=/usr/local/apache2/bin/apxs
		APACHE2=-DAPACHE2=1
	else
		APXS=apxs
	fi
fi

AC_CHECK_PROG(APXS, apxs, apxs, $with_apxs)

AC_MSG_CHECKING(whether apxs works)
$APXS -q CFLAGS >/dev/null
if test $? = 0; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
	AC_MSG_ERROR(Cannot build mod_ldap_userdir without a valid apxs program)
fi

if test -n "$with_sdk_headers"; then
	CFLAGS="-I$with_sdk_headers $CFLAGS"
fi
if test -n "$with_sdk_libs"; then
	LDFLAGS="-L$with_sdk_libs $LDFLAGS"
fi

check_netscape_lib()
{
	if test $found_netscape_libs = no; then
		thelib=$1
		extralibs=$2

		unset ac_cv_lib_${thelib}_ldap_init
		found_netscape_libs=yes
		AC_CHECK_LIB($thelib, ldap_init, LIBS="-l$thelib $extralibs $LIBS",
		             found_netscape_libs=no, $extralibs)
	fi
}

AC_CHECK_LIB(lber, ber_init)
AC_CHECK_LIB(ldap, ldap_init, found_openldap_libs=yes; LIBS="-lldap $LIBS", AC_MSG_ERROR(You must have libldap installed in order to build mod_ldap_userdir.))

if test -z "found_openldap_libs"; then
	found_netscape_libs=no

	check_netscape_lib ldapssl41 '-lnspr3 -lplc3 -lplds3'	# Generic
	check_netscape_lib ldapssl41 '-lnspr3 -lplc3 -lplds3 -lsocket -lnsl -lmt' # Solaris
	check_netscape_lib ldapssl41 '-lnspr3 -lplc3 -lplds3 -lpthread' # Linux
	check_netscape_lib ldapssl40
	check_netscape_lib ldapssl40 -lpthread
	check_netscape_lib ldapssl30
	check_netscape_lib ldapssl30 -lpthread
	check_netscape_lib ldapssl20
	check_netscape_lib ldapssl20 -lpthread

	if test $found_netscape_libs = no; then
		AC_MSG_ERROR(could not find Netscape LDAP libraries)
	fi
fi

AC_CHECK_HEADERS(lber.h, , AC_MSG_ERROR(You must have lber.h in order to build mod_ldap_userdir.))
AC_CHECK_HEADERS(ldap.h, , AC_MSG_ERROR(You must have ldap.h in order to build mod_ldap_userdir.), [#include <lber.h>])

AC_SUBST(LIBS LDFLAGS)
AC_SUBST(APACHE2 TLS ACTIVATE)
AC_OUTPUT(Makefile)
